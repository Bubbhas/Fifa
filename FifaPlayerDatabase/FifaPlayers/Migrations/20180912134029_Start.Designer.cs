// <auto-generated />
using System;
using FifaPlayers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FifaPlayers.Migrations
{
    [DbContext(typeof(FifaContext))]
    [Migration("20180912134029_Start")]
    partial class Start
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FifaPlayers.Classes.FootballPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<decimal>("Price");

                    b.Property<int?>("UserTeamId");

                    b.HasKey("Id");

                    b.HasIndex("UserTeamId");

                    b.ToTable("FootballPlayers");
                });

            modelBuilder.Entity("FifaPlayers.Classes.RealTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("RealTeams");
                });

            modelBuilder.Entity("FifaPlayers.Classes.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FifaPlayers.Classes.UserTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("TeamMoney");

                    b.Property<string>("TeamName");

                    b.HasKey("Id");

                    b.ToTable("UserTeams");
                });

            modelBuilder.Entity("FifaPlayers.Classes.UserTeamPlayer", b =>
                {
                    b.Property<int>("PlayerId");

                    b.Property<int>("UserTeamId");

                    b.HasKey("PlayerId", "UserTeamId");

                    b.HasIndex("UserTeamId");

                    b.ToTable("UserTeamPlayers");
                });

            modelBuilder.Entity("FifaPlayers.Classes.FootballPlayer", b =>
                {
                    b.HasOne("FifaPlayers.Classes.UserTeam")
                        .WithMany("TeamFootballPlayers")
                        .HasForeignKey("UserTeamId");
                });

            modelBuilder.Entity("FifaPlayers.Classes.UserTeamPlayer", b =>
                {
                    b.HasOne("FifaPlayers.Classes.FootballPlayer", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FifaPlayers.Classes.UserTeam", "UserTeam")
                        .WithMany()
                        .HasForeignKey("UserTeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
